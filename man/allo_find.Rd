% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allo_find.R
\name{allo_find}
\alias{allo_find}
\title{Find allometric equations in allodb or in a custom equations-table.}
\usage{
allo_find(data, custom_eqn = NULL)
}
\arguments{
\item{data}{A dataframe as those created with \code{\link[=add_species]{add_species()}}.}

\item{custom_eqn}{A dataframe of class "eqn".}
}
\value{
A nested dataframe with each row containing the data of an equation
type.
}
\description{
Find allometric equations in allodb or in a custom equations-table.
}
\examples{
census <- dplyr::sample_n(fgeo.biomass::scbi_tree1, 30)
species <- fgeo.biomass::scbi_species
census_species <- add_species(
  census, species,
  site = "scbi"
)

allo_find(census_species)

# PROVIDE CUSTOM EQUAITONS ----------------------------------------------
# Checks that the structure of your data isn't terriby wrong
# BAD
try(as_eqn("really bad data"))
try(as_eqn(data.frame(1)))

# GOOD
your_equations <- tibble::tibble(
  equation_id = c("000001"),
  site = c("scbi"),
  sp = c("tilia americana"),
  # Watning: Fake!
  eqn = c("exp(-2.48 + 2.4835 * log(dbh))"),
  eqn_type = c("mixed_hardwood"),
  anatomic_relevance = c("total aboveground biomass"),
 dbh_unit = "cm",
 bms_unit = "g"
)

class(as_eqn(your_equations))

allo_find(census_species, custom_eqn = as_eqn(your_equations))

census_species \%>\%
allo_find(custom_eqn = as_eqn(your_equations))
}
\seealso{
Other functions to manipulate equations: \code{\link{allo_evaluate}},
  \code{\link{allo_lookup}}

Other constructors: \code{\link{add_species}}
}
\concept{constructors}
\concept{functions to manipulate equations}
